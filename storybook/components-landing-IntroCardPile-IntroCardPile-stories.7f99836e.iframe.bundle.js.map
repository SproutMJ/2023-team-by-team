{"version":3,"file":"components-landing-IntroCardPile-IntroCardPile-stories.7f99836e.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;AAKA;;AAIA;;;;;;;;AAQA;;;;AAIA;AAGA;;;;;;;;;;;AAaA;;;;;;;;AAQA;;;;AAIA;;;AAKA;;AAIA;AACA;;AAEA;;AAGA;AACA;;;AAMA;AACA;;AAEA;;AAGA;AACA;;;AAMA;AACA;;AAEA;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;;;AAGA;;;;;;;;;;ACrCA;;;;;AAKA;AAGA;;;;;;;;;;AAUA;AAGA;;;;;;;AASA;;;;;;;;;;;;AAYA;;AAaA;;;;;AASA;;AAGA;;;;;AAhBA;;AAgBA;AACA;AAGA;;;AAGA;AAGA;;;AAGA;AAGA;;;AAGA;;;;;;;;;ACvFA;;;;;AAKA;AAGA;;;;;;AAQA;;;;;;;;;;;AAkBA;;;AAAA;AAIA;;;AAGA;;AAEA;AACA;;;;;;;;;AC5CA;;;;;AAKA;AAGA;;;;;;;;AAUA;;;;;AAOA;;;;;;;;AAUA;;;;;;;AASA;;AAUA;AAEA;;AAEA;;AAKA;;AAEA;AAIA;AAGA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;;;;;;;AASA;AAGA;;AAIA;AACA","sources":["webpack://frontend/./src/components/landing/IntroCardPile/IntroCardPile.styled.ts","webpack://frontend/./src/components/common/Text/Text.styled.ts","webpack://frontend/./src/components/landing/FeedDecoration/FeedDecoration.styled.ts","webpack://frontend/./src/components/landing/FileDriveDecoration/FileDriveDecoration.styled.ts","webpack://frontend/./src/components/landing/TeamCalendarDecoration/TeamCalendarDecoration.styled.ts"],"sourcesContent":["import { styled, css, keyframes } from 'styled-components';\r\nimport type { CSSProp } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  width: 1100px;\r\n  height: 910px;\r\n\r\n  transform-origin: bottom left;\r\n\r\n  pointer-events: none;\r\n  z-index: ${({ theme }) => theme.zIndex.LANDING_CARD};\r\n\r\n  @media screen and (max-height: 930px) {\r\n    transform: scale(0.9);\r\n  }\r\n\r\n  @media screen and (max-height: 780px) {\r\n    transform: scale(0.78);\r\n  }\r\n\r\n  @media screen and (max-height: 710px) {\r\n    transform: scale(0.7);\r\n  }\r\n\r\n  @media screen and (max-height: 630px) {\r\n    transform: scale(0.62);\r\n  }\r\n\r\n  @media screen and (max-height: 510px) {\r\n    transform: scale(0.5);\r\n  }\r\n\r\n  @media screen and (max-height: 440px) {\r\n    transform: scale(0.41);\r\n  }\r\n\r\n  @media screen and (max-height: 390px) {\r\n    transform: scale(0.35);\r\n  }\r\n`;\r\n\r\nconst cardRotate = (afterDegree: string) => keyframes`\r\n  0% {\r\n    transform: rotate(-60deg);\r\n  }\r\n  100% {\r\n    transform: rotate(${afterDegree});\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div<{ css: CSSProp }>`\r\n  position: absolute;\r\n  right: 60%;\r\n  bottom: -30%;\r\n\r\n  width: 640px;\r\n  height: 910px;\r\n\r\n  box-shadow: 0 20px 40px ${({ theme }) => theme.color.TRANSPARENT_BLACK};\r\n\r\n  transform-origin: bottom right;\r\n\r\n  ${({ css }) => css}\r\n`;\r\n\r\nconst invertedFadeInOut = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  14%,\r\n  86% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Blind = styled.div<{ animation: boolean }>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: ${({ theme }) => theme.color.BLUE100};\r\n\r\n  opacity: 0;\r\n\r\n  ${({ animation = true }) =>\r\n    animation &&\r\n    css`\r\n      opacity: 1;\r\n\r\n      animation: ${invertedFadeInOut} 7s 1.6s infinite;\r\n    `}\r\n`;\r\n\r\nexport const card1 = (animation: boolean) => css`\r\n  background-color: ${({ theme }) => theme.color.BLUE400};\r\n\r\n  ${animation\r\n    ? () => css`\r\n        transform: rotate(-60deg);\r\n        animation: ${() => cardRotate('10deg')} 1.5s forwards;\r\n      `\r\n    : () => css`\r\n        transform: rotate(10deg);\r\n      `}\r\n`;\r\n\r\nexport const card2 = (animation: boolean) => css`\r\n  background-color: ${({ theme }) => theme.color.BLUE200};\r\n\r\n  ${animation\r\n    ? () => css`\r\n        transform: rotate(-60deg);\r\n        animation: ${() => cardRotate('17deg')} 1.5s 0.3s forwards;\r\n      `\r\n    : () => css`\r\n        transform: rotate(17deg);\r\n      `}\r\n`;\r\n\r\nexport const card3 = (animation: boolean) => css`\r\n  background-color: ${({ theme }) => theme.color.BLUE100};\r\n\r\n  ${animation\r\n    ? () => css`\r\n        transform: rotate(-60deg);\r\n        animation: ${cardRotate('24deg')} 1.5s 0.6s forwards;\r\n      `\r\n    : () => css`\r\n        transform: rotate(24deg);\r\n      `}\r\n`;\r\n","import { styled } from 'styled-components';\nimport type { TextSize } from '~/types/size';\nimport type { TextProps, Weight } from './Text';\n\nconst fontWeight: Record<Weight, number> = {\n  light: 100,\n  normal: 400,\n  semiBold: 600,\n  bold: 800,\n};\n\nconst fontSize: Record<TextSize, string> = {\n  xxs: '10px',\n  xs: '12px',\n  sm: '14px',\n  md: '16px',\n  lg: '18px',\n  xl: '20px',\n  xxl: '22px',\n};\n\nexport const TextWrapper = styled.p<TextProps>`\n  h1&,\n  h2&,\n  h3&,\n  h4&,\n  h5&,\n  h6& {\n    font-weight: bold;\n  }\n  h1& {\n    font-size: 36px;\n  }\n  h2& {\n    font-size: 32px;\n  }\n  h3& {\n    font-size: 28px;\n  }\n  h4& {\n    font-size: 24px;\n  }\n  p&,\n  span&,\n  strong&,\n  small& {\n    font-size: ${({ size = 'md' }) => fontSize[size] || 'initial'};\n    font-weight: ${({ weight = 'normal' }) => fontWeight[weight] || 'initial'};\n  }\n  && {\n    ${(props) => props.css}\n  }\n`;\n","import { styled, css, keyframes } from 'styled-components';\r\nimport type { CSSProp } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 30px;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 50px;\r\n`;\r\n\r\nexport const SampleBadge = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n\r\n  border-radius: 18px;\r\n  background-color: ${({ theme }) => theme.color.BLUE600};\r\n`;\r\n\r\nexport const SampleThread = styled.div<{ css: CSSProp }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 12px;\r\n\r\n  width: 100%;\r\n  padding: 30px;\r\n\r\n  border-radius: 20px;\r\n\r\n  ${({ css }) => css};\r\n`;\r\n\r\nexport const CircleButtonsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 14px;\r\n  position: absolute;\r\n  top: 476px;\r\n  right: 66px;\r\n`;\r\n\r\nexport const CircleButton = styled.div`\r\n  width: 68px;\r\n  height: 68px;\r\n  padding: 14px;\r\n\r\n  border-radius: 34px;\r\n  background-color: #193ecb;\r\n\r\n  & svg {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    color: ${({ theme }) => theme.color.BLUE400};\r\n  }\r\n`;\r\n\r\nconst fillToRight = (width: string) => keyframes`\r\n  from {\r\n    width: 0;\r\n  }\r\n  to {\r\n    width: ${width};\r\n  }\r\n`;\r\n\r\nexport const WritingLine = styled.div<{\r\n  width: string;\r\n  delay: string;\r\n  color: 'dark' | 'light';\r\n}>`\r\n  width: 0;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n\r\n  background-color: ${({ color, theme }) =>\r\n    color === 'dark' ? theme.color.BLUE500 : theme.color.BLUE600};\r\n\r\n  animation: ${({ width }) => fillToRight(width)} 2.5s forwards;\r\n  animation-delay: ${({ delay }) => delay};\r\n`;\r\n\r\nexport const sampleThread1 = css`\r\n  height: 200px;\r\n\r\n  background-color: ${({ theme }) => theme.color.BLUE700};\r\n`;\r\n\r\nexport const sampleThread2 = css`\r\n  height: 150px;\r\n\r\n  background-color: ${({ theme }) => theme.color.BLUE300};\r\n`;\r\n\r\nexport const sampleThread3 = css`\r\n  height: 120px;\r\n\r\n  background-color: ${({ theme }) => theme.color.BLUE300};\r\n`;\r\n","import { styled, keyframes } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 30px;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 50px;\r\n`;\r\n\r\nexport const SampleBadge = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n\r\n  border-radius: 18px;\r\n  background-color: ${({ theme }) => theme.color.BLUE600};\r\n`;\r\n\r\nexport const WritingLinesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 50px;\r\n\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst blink = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  12% {\r\n    opacity: 0.4;\r\n  }\r\n  24%,\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const FolderOpenIconWrapper = styled.div`\r\n  width: 80px;\r\n  height: 60px;\r\n`;\r\n\r\nexport const WritingLine = styled.div<{\r\n  width: string;\r\n  delay: string;\r\n}>`\r\n  width: ${({ width }) => width};\r\n  height: 8px;\r\n\r\n  background-color: ${({ theme }) => theme.color.BLUE500};\r\n\r\n  animation: ${blink} 5s infinite;\r\n  animation-delay: ${({ delay }) => delay};\r\n`;\r\n","import { styled, css, keyframes } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 30px;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 50px;\r\n`;\r\n\r\nexport const SampleBadge = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n\r\n  border-radius: 18px;\r\n  background-color: ${({ theme }) => theme.color.BLUE600};\r\n`;\r\n\r\nexport const CalendarHeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  column-gap: 16px;\r\n\r\n  width: 100%;\r\n  height: 40px;\r\n`;\r\n\r\nexport const CalendarContainer = styled.div`\r\n  position: relative;\r\n\r\n  width: 100%;\r\n  height: 500px;\r\n`;\r\n\r\nexport const CalendarTable = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(6, 1fr);\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 4px;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const SampleCalendarBarContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const SampleCalendarBar = styled.div<{\r\n  row: number;\r\n  column: number;\r\n  length: number;\r\n  level: number;\r\n  roundedStart: boolean;\r\n  roundedEnd: boolean;\r\n  color: string;\r\n}>`\r\n  position: absolute;\r\n  top: ${({ row, level }) =>\r\n    `calc(${(row * 100) / 6}% + ${(level + 1) * 28 - 4}px)`};\r\n  left: ${({ column }) => `${(column * 100) / 7}%`};\r\n\r\n  width: ${({ length, roundedStart, roundedEnd }) =>\r\n    `calc(${(length * 100) / 7}% - ${\r\n      10 * ((roundedStart ? 1 : 0) + (roundedEnd ? 1 : 0))\r\n    }px)`};\r\n  height: 24px;\r\n  margin-left: ${({ roundedStart }) => (roundedStart ? '10px' : '0')};\r\n\r\n  border-radius: ${({ roundedStart, roundedEnd }) =>\r\n    `${roundedStart ? '8px' : '0'} ${roundedEnd ? '8px 8px' : '0 0'} ${\r\n      roundedStart ? '8px' : '0'\r\n    }`};\r\n  background-color: ${({ color }) => color};\r\n`;\r\n\r\nexport const CalendarCell = styled.div`\r\n  background-color: ${({ theme }) => theme.color.BLUE200};\r\n`;\r\n\r\nconst backAndForth = keyframes`\r\n  0% {\r\n    top: 70%;\r\n    left: 70%;\r\n    opacity: 0;\r\n  }\r\n  14% {\r\n    top: 70%;\r\n    left: 70%;\r\n    opacity: 1;\r\n  }\r\n  28% {\r\n    top: 50%;\r\n    left: 80%;\r\n    opacity: 1;\r\n  }\r\n  42% {\r\n    top: 50%;\r\n    left: 80%;\r\n    opacity: 0;\r\n  }\r\n  56% {\r\n    top: 50%;\r\n    left: 80%;\r\n    opacity: 1;\r\n  }\r\n  70% {\r\n    top: 70%;\r\n    left: 70%;\r\n    opacity: 1;\r\n  }\r\n  84% {\r\n    top: 70%;\r\n    left: 70%;\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nexport const MousePointer = styled.img<{ animation: boolean }>`\r\n  position: absolute;\r\n  top: 70%;\r\n  left: 70%;\r\n\r\n  width: 40px;\r\n\r\n  opacity: 0;\r\n\r\n  ${({ animation = true }) =>\r\n    animation &&\r\n    css`\r\n      animation: ${backAndForth} 7s infinite;\r\n    `};\r\n`;\r\n\r\nexport const calendarHeaderText = css`\r\n  color: ${({ theme }) => theme.color.BLUE600};\r\n\r\n  font-weight: 600;\r\n  font-size: 28px;\r\n`;\r\n"],"names":[],"sourceRoot":""}