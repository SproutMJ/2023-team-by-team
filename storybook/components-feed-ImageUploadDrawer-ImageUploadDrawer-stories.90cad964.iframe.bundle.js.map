{"version":3,"file":"components-feed-ImageUploadDrawer-ImageUploadDrawer-stories.90cad964.iframe.bundle.js","mappings":";;;;AAUA;;;AAQA;;;;;;;;;;;;;;AAeA;;AAIA;;;;;;AAQA;;;;AAMA;;;;;;;;;;;;;;ACtCA;AACA;AAGA;AACA;AACA;AACA;AAGA;;AAEA;AAIA;;;;;AAOA;AAEA;;;AAIA;;AAIA;;;;;;;;;;;;AAeA;;AAGA","sources":["webpack://frontend/./src/components/feed/ImageUploadDrawer/ImageUploadDrawer.styled.ts","webpack://frontend/./src/components/common/Button/Button.styled.ts"],"sourcesContent":["import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.div<{\r\n  $isOpen: boolean;\r\n  $isMobile: boolean;\r\n  $slideDistance: number;\r\n}>`\r\n  display: flex;\r\n  position: absolute;\r\n\r\n  ${({ $isMobile }) => {\r\n    if ($isMobile) {\r\n      return css`\r\n        bottom: 10px;\r\n        width: 100%;\r\n      `;\r\n    }\r\n\r\n    return css`\r\n      bottom: 46px;\r\n      left: 30px;\r\n\r\n      width: calc(100% - 60px);\r\n    `;\r\n  }}\r\n\r\n  height: 136px;\r\n\r\n  border-radius: 20px 20px 0 0;\r\n  background: linear-gradient(30deg, #bfc3ff, #eaebff);\r\n\r\n  transition: 0.35s;\r\n  transform: translateY(\r\n    ${({ $isOpen, $slideDistance }) => ($isOpen ? `-${$slideDistance}px` : 0)}\r\n  );\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  flex-grow: 1;\r\n\r\n  padding: 20px 20px 0 20px;\r\n`;\r\n\r\nexport const CloseButtonWrapper = styled.div`\r\n  width: 64px;\r\n  height: 100%;\r\n  padding: 14px;\r\n`;\r\n\r\nexport const closeButton = css`\r\n  width: 36px;\r\n  height: 36px;\r\n  padding: 0;\r\n\r\n  svg {\r\n    width: 36px;\r\n    height: 36px;\r\n  }\r\n\r\n  svg > path {\r\n    fill: #7f84ff;\r\n  }\r\n`;\r\n","import { styled, css } from 'styled-components';\r\nimport type { CSSProp } from 'styled-components';\r\nimport type { ButtonVariant, ButtonProps } from './Button';\r\nimport type { ButtonSize } from '~/types/size';\r\n\r\nconst paddingSize: Record<ButtonSize, string> = {\r\n  sm: '6px',\r\n  md: '12px',\r\n  lg: '18px',\r\n};\r\n\r\nconst variants: Record<ButtonVariant, CSSProp> = {\r\n  primary: css`\r\n    background-color: ${({ theme }) => theme.color.PRIMARY};\r\n    color: ${({ theme }) => theme.color.WHITE};\r\n  `,\r\n\r\n  normal: css`\r\n    background-color: ${({ theme }) => theme.color.WHITE};\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n    border: 1px solid ${({ theme }) => theme.color.GRAY300};\r\n  `,\r\n\r\n  plain: css`\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n  `,\r\n};\r\n\r\nexport const ButtonWrapper = styled.button.withConfig({\r\n  shouldForwardProp: (prop) => !['css', 'variant', 'size'].includes(prop),\r\n})<ButtonProps>`\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  text-align: center;\r\n\r\n  ${({ size = 'md' }) => {\r\n    return css`\r\n      padding: ${paddingSize[size]};\r\n    `;\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    return variants[variant];\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    if (variant !== 'plain') {\r\n      return css`\r\n        &:disabled {\r\n          opacity: 0.6;\r\n        }\r\n\r\n        &:not([disabled]):hover {\r\n          opacity: 0.8;\r\n        }\r\n\r\n        border-radius: 4px;\r\n\r\n        transition: 0.2s;\r\n      `;\r\n    }\r\n  }};\r\n\r\n  ${(props) => props.css}\r\n`;\r\n"],"names":[],"sourceRoot":""}