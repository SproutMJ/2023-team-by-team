{"version":3,"file":"components-feed-ThreadImageModal-ThreadImageModal-stories.76541f2b.iframe.bundle.js","mappings":";;;;;;;;;;AAYA;;AAIA;;;;;;;AASA;;;AAKA;;;;;AAOA;;;;AAIA;;;;AAMA;;;;;AAKA;;;;;;;ACvCA;AACA;AAGA;AACA;AACA;AACA;AAGA;;AAEA;AAIA;;;;;AAOA;AAEA;;;AAIA;;AAIA;;;;;;;;;;;;AAeA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;;;AAGA;;;;;AC/CA;AACA;AAGA;;;;;;AAQA;;;;;AAKA;AAGA;;;;;;;;AAUA;AACA;;;AAKA;AACA;;;AAUA;;;AAAA;;;;AAIA;;;;;;;;AAQA;AACA;;;;;;;;;;;;;;;;AC/CA;AACA;;;;;;;ACTA;;;;;;AAQA;;;;AAMA;;;;;AAKA;;;AAMA;AACA;;;AAKA;AACA","sources":["webpack://frontend/./src/components/feed/ThreadImageModal/ThreadImageModal.styled.ts","webpack://frontend/./src/components/common/Button/Button.styled.ts","webpack://frontend/./src/components/common/Text/Text.styled.ts","webpack://frontend/./src/components/feed/Carousel/Carousel.styled.ts","webpack://frontend/./src/components/feed/CarouselImage/CarouselImage.styled.ts","webpack://frontend/./src/components/feed/PageIndicator/PageIndicator.styled.ts"],"sourcesContent":["import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background: ${({ theme }) => theme.gradient.SMOOTH_BLACK};\r\n  backdrop-filter: blur(10px);\r\n`;\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  height: 80px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const CarouselWrapper = styled.div`\r\n  overflow: hidden;\r\n  flex: 1 0;\r\n`;\r\n\r\nexport const PageIndicatorWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  height: 110px;\r\n`;\r\n\r\nexport const title = css`\r\n  overflow: hidden;\r\n\r\n  font-size: 26px;\r\n  color: ${({ theme }) => theme.color.WHITE};\r\n  line-height: 40px;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const closeButton = css`\r\n  width: 48px;\r\n  height: 48px;\r\n  padding: 5px;\r\n\r\n  color: ${({ theme }) => theme.color.WHITE};\r\n\r\n  & svg {\r\n    width: 38px;\r\n    height: 38px;\r\n  }\r\n`;\r\n","import { styled, css } from 'styled-components';\r\nimport type { CSSProp } from 'styled-components';\r\nimport type { ButtonVariant, ButtonProps } from './Button';\r\nimport type { ButtonSize } from '~/types/size';\r\n\r\nconst paddingSize: Record<ButtonSize, string> = {\r\n  sm: '6px',\r\n  md: '12px',\r\n  lg: '18px',\r\n};\r\n\r\nconst variants: Record<ButtonVariant, CSSProp> = {\r\n  primary: css`\r\n    background-color: ${({ theme }) => theme.color.PRIMARY};\r\n    color: ${({ theme }) => theme.color.WHITE};\r\n  `,\r\n\r\n  normal: css`\r\n    background-color: ${({ theme }) => theme.color.WHITE};\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n    border: 1px solid ${({ theme }) => theme.color.GRAY300};\r\n  `,\r\n\r\n  plain: css`\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n  `,\r\n};\r\n\r\nexport const ButtonWrapper = styled.button.withConfig({\r\n  shouldForwardProp: (prop) => !['css', 'variant', 'size'].includes(prop),\r\n})<ButtonProps>`\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  text-align: center;\r\n\r\n  ${({ size = 'md' }) => {\r\n    return css`\r\n      padding: ${paddingSize[size]};\r\n    `;\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    return variants[variant];\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    if (variant !== 'plain') {\r\n      return css`\r\n        &:disabled {\r\n          opacity: 0.6;\r\n        }\r\n\r\n        &:not([disabled]):hover {\r\n          opacity: 0.8;\r\n        }\r\n\r\n        border-radius: 4px;\r\n\r\n        transition: 0.2s;\r\n      `;\r\n    }\r\n  }};\r\n\r\n  ${(props) => props.css}\r\n`;\r\n","import { styled } from 'styled-components';\nimport type { TextSize } from '~/types/size';\nimport type { TextProps, Weight } from './Text';\n\nconst fontWeight: Record<Weight, number> = {\n  light: 100,\n  normal: 400,\n  semiBold: 600,\n  bold: 800,\n};\n\nconst fontSize: Record<TextSize, string> = {\n  xxs: '10px',\n  xs: '12px',\n  sm: '14px',\n  md: '16px',\n  lg: '18px',\n  xl: '20px',\n  xxl: '22px',\n};\n\nexport const TextWrapper = styled.p.withConfig({\n  shouldForwardProp: (prop) => !['size', 'weight', 'css'].includes(prop),\n})<TextProps>`\n  h1&,\n  h2&,\n  h3&,\n  h4&,\n  h5&,\n  h6& {\n    font-weight: bold;\n  }\n  h1& {\n    font-size: 36px;\n  }\n  h2& {\n    font-size: 32px;\n  }\n  h3& {\n    font-size: 28px;\n  }\n  h4& {\n    font-size: 24px;\n  }\n  p&,\n  span&,\n  strong&,\n  small& {\n    font-size: ${({ size = 'md' }) => fontSize[size] || 'initial'};\n    font-weight: ${({ weight = 'normal' }) => fontWeight[weight] || 'initial'};\n  }\n  && {\n    ${(props) => props.css}\n  }\n`;\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.div<{ $width: string; $height: string }>`\r\n  position: relative;\r\n\r\n  width: ${({ $width }) => $width};\r\n  height: ${({ $height }) => $height};\r\n`;\r\n\r\nexport const SlidesView = styled.div`\r\n  overflow: hidden;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport const Slides = styled.div<{ $currentPage: number }>`\r\n  display: flex;\r\n  height: 100%;\r\n\r\n  transition: 0.4s;\r\n  transform: ${({ $currentPage }) => `translateX(-${$currentPage - 1}00%)`};\r\n`;\r\n\r\nconst buttonWrapper = css`\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 0;\r\n\r\n  width: 90px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ArrowCircleLeftButtonWrapper = styled.div`\r\n  ${buttonWrapper}\r\n\r\n  left: 0;\r\n`;\r\n\r\nexport const ArrowCircleRightButtonWrapper = styled.div`\r\n  ${buttonWrapper}\r\n\r\n  right: 0;\r\n`;\r\n\r\nexport const closeButton = css`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nexport const arrowButton = (disabled: boolean) => css`\r\n  width: 90px;\r\n  padding: 0;\r\n\r\n  cursor: ${disabled ? 'not-allowed' : 'pointer'};\r\n\r\n  & svg {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n\r\n  & svg > path {\r\n    opacity: ${disabled ? 0.3 : 1};\r\n    stroke: ${({ theme }) => theme.color.WHITE};\r\n  }\r\n`;\r\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1 0 100%;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 100px;\r\n\r\n  & > img {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n`;\r\n\r\nexport const errorText = css`\r\n  color: ${({ theme }) => theme.color.WHITE};\r\n`;\r\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n\r\n  height: 66px;\r\n`;\r\n\r\nexport const NumericIndicator = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n\r\n  height: 40px;\r\n`;\r\n\r\nexport const DotIndicator = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  column-gap: 4px;\r\n`;\r\n\r\nexport const Dot = styled.button<{ $selected: boolean }>`\r\n  width: 14px;\r\n  height: 14px;\r\n\r\n  border-radius: 50%;\r\n  background-color: ${({ theme, $selected }) =>\r\n    $selected ? theme.color.WHITE : theme.color.GRAY550};\r\n\r\n  transition: 0.2s;\r\n`;\r\n\r\nexport const currentPageText = css`\r\n  color: ${({ theme }) => theme.color.WHITE};\r\n  font-size: 34px;\r\n  line-height: 34px;\r\n`;\r\n\r\nexport const pageCountText = css`\r\n  color: ${({ theme }) => theme.color.GRAY550};\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n`;\r\n"],"names":[],"sourceRoot":""}