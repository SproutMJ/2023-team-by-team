{"version":3,"file":"components-common-Toast-Toast-stories.0e466d03.iframe.bundle.js","mappings":";;;;;;;;;;AAaA;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACeA;AACA;;;AAGA","sources":["webpack://frontend/./src/components/common/Toast/Toast.styled.ts","webpack://frontend/./src/components/common/Text/Text.styled.ts"],"sourcesContent":["import { styled } from 'styled-components';\nimport type { ToastProps } from '~/components/common/Toast/Toast';\n\nexport const Wrapper = styled.div<Pick<ToastProps, 'status' | 'isActive'>>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  min-width: 50px;\n  padding: 16px 16px;\n\n  border-radius: 4px;\n\n  ${({ status, theme }) => {\n    switch (status) {\n      case 'success':\n        return `\n          background-color: ${theme.color.PRIMARY};\n          color: ${theme.color.WHITE};\n        `;\n      case 'error':\n        return `\n          background-color: ${theme.color.RED};\n          color: ${theme.color.WHITE};\n        `;\n    }\n  }}\n\n  white-space: pre-line;\n  line-height: 1.5;\n\n  animation: ${({ theme, isActive }) =>\n      isActive ? theme.animation.fadeInUp : theme.animation.fadeOut}\n    0.4s ease-in-out both;\n`;\n","import { styled } from 'styled-components';\nimport type { TextSize } from '~/types/size';\nimport type { TextProps, Weight } from './Text';\n\nconst fontWeight: Record<Weight, number> = {\n  light: 100,\n  normal: 400,\n  semiBold: 600,\n  bold: 800,\n};\n\nconst fontSize: Record<TextSize, string> = {\n  xxs: '10px',\n  xs: '12px',\n  sm: '14px',\n  md: '16px',\n  lg: '18px',\n  xl: '20px',\n  xxl: '22px',\n};\n\nexport const TextWrapper = styled.p<TextProps>`\n  h1&,\n  h2&,\n  h3&,\n  h4&,\n  h5&,\n  h6& {\n    font-weight: bold;\n  }\n  h1& {\n    font-size: 36px;\n  }\n  h2& {\n    font-size: 32px;\n  }\n  h3& {\n    font-size: 28px;\n  }\n  h4& {\n    font-size: 24px;\n  }\n  p&,\n  span&,\n  strong&,\n  small& {\n    font-size: ${({ size = 'md' }) => fontSize[size] || 'initial'};\n    font-weight: ${({ weight = 'normal' }) => fontWeight[weight] || 'initial'};\n  }\n  && {\n    ${(props) => props.css}\n  }\n`;\n"],"names":[],"sourceRoot":""}