{"version":3,"file":"components-common-Header-Header-stories.4b484bce.iframe.bundle.js","mappings":";;;;;;;;AAWA;AAGA;;;;;;;;;AAWA;;;;AAMA;;;;AAIA;AAGA;;;;;;;;;AASA;;AAIA;;;AAKA;;;;;;AA6BA;;;AAhBA;;;;;;;;;;;;AAYA;;AAIA;;;;;;;;;;;;AAYA;;AAIA;;;;;;;;AAUA;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;AC3HA;;;AAKA;;;AAIA;;AAMA;;;;AAOA;;;;;;;;AAQA;;;;;AAOA;AAGA;;AC3CA;;;;;;ACCA;;AAEA;;;;ACFA;AACA;AACA;;;ACEA;;ACHA;;;AAGA;;;AAGA;;AAEA;;ACDA;;;;;;;;;;;;;ACIA;;;;AAIA;;;AAGA;AAGA;;;ACfA;;ACJA;;;;;;;ACIA;;AAEA;;;;;AAKA;;;;;;;;;AAWA;;AAEA;;;;;;;;AAQA;;;;;AAOA;;;;;AAOA;;;;;;AAQA;;;;;;;;;AASA;AAGA;AACA;;;AAMA;;;;;;;;ACxEA;;;;;;;;;;AAUA;;;;;;;;AAUA;;;;;;;;;AAWA;;;;;;;;;;;;;ACzBA;;;;;;AAMA;;;;;;;;AAQA;;;;;;;;AAUA;;;;;;;AAOA;AAGA;;;;AAMA;;;;AAIA;;;;;;;;;AASA;;AAIA;AACA;AAGA;;;;AAMA;;;;AAMA;;;;;;AAMA;AAGA;;;AAGA;;;;;AC7FA;;;;AAMA;;;;;;AAMA;;;;;;;;AAQA;;;;;;;;AAUA;;;;;;;;AAQA;AAGA;;;;AAMA;;;;AAIA;AAGA;;;;AAMA;;;AAKA;;AAIA;;;;AAMA;;;;;;;;AAUA;AACA;AAOA;;AAAA;;;;;;;;;ACxFA;;;;;;;AAOA;;;;;;;;;;;;AAYA;AAGA;;;;;;;AAOA;;AAIA;;;AAGA;;AAIA;;;;;;;;AAUA;;;;;;;AASA;;;;;;;;AAeA;;AAHA;AAGA;;;;;;;AASA;;;;;;;;;AAWA;;;;AAIA;AAGA;;;;;;;;;;;;AAYA;;AAIA;;;;;;;;;;;;AAYA;;AAIA;;AAEA;;AAIA","sources":["webpack://frontend/./src/components/common/Header/Header.styled.ts","webpack://frontend/./src/components/common/Accordion/AccordionHeader/AccordionHeader.styled.tsx","webpack://frontend/./src/components/common/Accordion/AccordionItem/AccordionItem.styled.tsx","webpack://frontend/./src/components/common/Accordion/Accordion.styled.tsx","webpack://frontend/./src/components/common/Accordion/AccordionBody/AccordionBody.styled.ts","webpack://frontend/./src/components/common/Accordion/AccordionBody/AccordionBody.tsx","webpack://frontend/./src/components/common/Menu/MenuList/MenuList.styled.ts","webpack://frontend/./src/components/common/Menu/MenuList/MenuList.tsx","webpack://frontend/./src/components/common/Menu/MenuItem/MenuItem.styled.ts","webpack://frontend/./src/components/common/Menu/MenuItem/MenuItem.tsx","webpack://frontend/./src/components/common/Menu/Menu.tsx","webpack://frontend/./src/components/team/TeamColorEditModal/TeamColorEditModal.styled.ts","webpack://frontend/./src/components/team/TeamPlaceMenu/TeamPlaceMenu.styled.ts","webpack://frontend/./src/components/user/AccountDeleteModal/AccountDeleteModal.styled.ts","webpack://frontend/./src/components/user/ServiceCenterModal/ServiceCenterModal.styled.ts","webpack://frontend/./src/components/user/UserInfoModal/UserInfoModal.styled.ts"],"sourcesContent":["import { css, styled } from 'styled-components';\nimport type { HeaderModalType } from '~/components/common/Header/Header';\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n\n  width: 100%;\n  height: 64px;\n  padding: 0 14px;\n\n  border-bottom: 2px solid ${({ theme }) => theme.color.GRAY200};\n`;\n\nexport const InnerContainer = styled.div`\n  display: flex;\n  column-gap: 20px;\n\n  & > div {\n    display: flex;\n    align-items: center;\n    column-gap: 12px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 10px;\n`;\n\nexport const Divider = styled.div`\n  width: 1px;\n  height: 24px;\n\n  background-color: ${({ theme }) => theme.color.GRAY500};\n`;\n\nexport const TeamBadgeEditIconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    width: 20px;\n    height: 20px;\n\n    color: ${({ theme }) => theme.color.WHITE};\n  }\n`;\n\nexport const TeamNameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 40px;\n  height: 40px;\n\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nexport const teamPlaceName = css`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const notificationButton = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 44px;\n  height: 44px;\n  padding: 0;\n\n  border-radius: 50%;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.GRAY200};\n  }\n`;\n\nexport const teamPlaceInfoButton = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 44px;\n  height: 44px;\n  padding: 0;\n\n  border-radius: 50%;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.GRAY200};\n  }\n`;\n\nexport const userInfoButton = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 50px;\n  height: 50px;\n  padding: 0;\n`;\n\nexport const teamColorButton = (\n  modalOpenType: HeaderModalType | undefined,\n  isModalOpen: boolean,\n) => css`\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  padding: 0px;\n\n  cursor: pointer;\n\n  & svg {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    opacity: ${modalOpenType === 'teamColor' && isModalOpen ? 1 : 0};\n  }\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  &:hover svg {\n    opacity: 1;\n  }\n`;\n","import type { CSSProperties } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport const Container = styled.div<{ isOpen: boolean }>`\n  cursor: pointer;\n\n  ${({ isOpen = false }) => {\n    if (isOpen)\n      return css`\n        outline: 3px ridge rgba(0, 46, 210, 0.381);\n        border-radius: 2px;\n      `;\n  }}\n  svg {\n    transition: transform 0.2s ease-in-out;\n    ${({ isOpen = false }) => {\n      if (isOpen)\n        return css`\n          transform: rotate(-180deg);\n        `;\n\n      return css`\n        transform: rotate(0);\n      `;\n    }}\n  }\n`;\n\nexport const accordionButton = (padding: CSSProperties['padding']) => css`\n  display: flex;\n  position: relative;\n  justify-content: space-between;\n  align-items: center;\n  overflow-anchor: none;\n\n  width: 100%;\n  padding: ${padding};\n  text-align: left;\n\n  border: 0;\n  border-radius: 0;\n`;\n\nexport const DisabledWrapper = styled.div<{\n  padding: CSSProperties['padding'];\n}>`\n  ${({ padding }) => accordionButton(padding)}\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.color.GRAY300};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n","import type { CSSProperties } from 'react';\nimport styled from 'styled-components';\n\nexport const Container = styled.div<{ width: CSSProperties['width'] }>`\n  width: ${({ width = 'auto' }) => width};\n\n  border: 1px solid ${({ theme }) => theme.color.GRAY300};\n  border-radius: 4px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div<{ isOpen: boolean; height: number }>`\n  overflow: hidden;\n  height: ${({ isOpen, height }) => (isOpen ? height + 24 : 0)}px;\n  padding: ${({ isOpen }) => (isOpen ? '10px 18px 12px' : '0 18px')};\n  border-top: 1px solid ${({ theme }) => theme.color.GRAY300};\n\n  transition: 0.35s ease;\n`;\n","import { useState, type PropsWithChildren, useRef, useEffect } from 'react';\nimport * as S from './AccordionBody.styled';\nimport { useAccordion } from '~/hooks/useAccordion';\n\ninterface AccordionBodyProps {\n  id: number;\n}\n\nconst AccordionBody = (props: PropsWithChildren<AccordionBodyProps>) => {\n  const { id, children } = props;\n  const { openedAccordion } = useAccordion();\n  const [bodyHeight, setBodyHeight] = useState(0);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const resizeObserver = new ResizeObserver(() => {\n      setBodyHeight(() => {\n        return ref.current ? ref.current.clientHeight : 0;\n      });\n    });\n\n    resizeObserver.observe(ref.current);\n\n    return () => resizeObserver.disconnect();\n  });\n\n  const getResultHeight = () => {\n    if (id === openedAccordion) {\n      return bodyHeight;\n    }\n\n    return 0;\n  };\n\n  return (\n    <S.Container isOpen={id === openedAccordion} height={getResultHeight()}>\n      <div ref={ref}>{children}</div>\n    </S.Container>\n  );\n};\n\nexport default AccordionBody;\n","import { styled } from 'styled-components';\nimport type { MenuListProps } from '~/components/common/Menu/MenuList/MenuList';\n\nexport const Wrapper = styled.ul<MenuListProps>`\n  position: absolute;\n  z-index: ${({ theme }) => theme.zIndex.MENU};\n\n  max-height: 200px;\n  width: ${({ width }) => width};\n  overflow-y: auto;\n\n  background-color: ${({ theme }) => theme.color.WHITE};\n\n  border: 1px solid ${({ theme }) => theme.color.GRAY200};\n  border-radius: 6px;\n`;\n","import { useRef, useEffect } from 'react';\nimport type { MouseEventHandler, PropsWithChildren } from 'react';\nimport { useMenu } from '~/hooks/useMenu';\nimport useClickOutside from '~/hooks/useClickOutside';\nimport { useListKeyboardNavigation } from '~/hooks/useListKeyboardNavigation';\nimport * as S from './MenuList.styled';\n\nexport interface MenuListProps {\n  width?: string;\n  onSelect?: (value: string) => void;\n}\n\nconst MenuList = (props: PropsWithChildren<MenuListProps>) => {\n  const { children, onSelect, width = '100%' } = props;\n\n  const {\n    isMenuOpen,\n    selectedValue,\n    handleMenuOpen,\n    handleSelectedValueChange,\n  } = useMenu();\n\n  const ref = useRef<HTMLUListElement>(null);\n\n  useClickOutside(ref, (e: Event) => {\n    const { target } = e;\n\n    if (target instanceof HTMLButtonElement) {\n      return;\n    }\n\n    if ((target as HTMLElement).closest('button')) {\n      return;\n    }\n\n    handleMenuOpen();\n  });\n\n  const handleMenuClick: MouseEventHandler<HTMLUListElement> = (e) => {\n    const { target } = e;\n\n    if (!(target instanceof HTMLLIElement)) {\n      return;\n    }\n\n    const { textContent } = target;\n\n    if (!textContent) {\n      return;\n    }\n\n    selectItem(textContent);\n  };\n\n  const selectItem = (value: string) => {\n    onSelect?.(value);\n    handleSelectedValueChange(value);\n    handleMenuOpen();\n  };\n\n  const {\n    handlers: { handleMouseEnter, handleMouseLeave, handleKeyDown },\n  } = useListKeyboardNavigation(ref, handleMenuOpen, selectItem);\n\n  useEffect(() => {\n    if (isMenuOpen && ref.current) {\n      ref.current.focus();\n    }\n  }, [isMenuOpen]);\n\n  useEffect(() => {\n    if (selectedValue === '' || !isMenuOpen) {\n      return;\n    }\n\n    if (!ref.current) {\n      return;\n    }\n\n    const target = Array.from(ref.current.children).find(\n      (child) => child.textContent?.replace('✓', '') === selectedValue,\n    );\n\n    if (!(target instanceof HTMLLIElement)) {\n      return;\n    }\n\n    const { offsetTop } = target;\n\n    ref.current.scrollTo(0, offsetTop);\n  }, [isMenuOpen, selectedValue]);\n\n  return (\n    <>\n      {isMenuOpen && (\n        <S.Wrapper\n          role=\"menu\"\n          ref={ref}\n          width={width}\n          onClick={handleMenuClick}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          onKeyDown={handleKeyDown}\n          tabIndex={0}\n        >\n          {children}\n        </S.Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default MenuList;\n","import { css, styled } from 'styled-components';\nimport type { MenuItemProps } from '~/components/common/Menu/MenuItem/MenuItem';\n\nexport const Wrapper = styled.li<Omit<MenuItemProps, 'value'>>`\n  position: relative;\n\n  padding: 8px 26px;\n\n  cursor: pointer;\n\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.GRAY100};\n  }\n\n  &.selected {\n    background-color: ${({ theme }) => theme.color.GRAY200};\n  }\n\n  ${({ css }) => css}\n`;\n\nexport const checkMark = css`\n  position: absolute;\n  left: 10px;\n`;\n","import type { PropsWithChildren } from 'react';\nimport type { CSSProp } from 'styled-components';\nimport Text from '~/components/common/Text/Text';\nimport { useMenu } from '~/hooks/useMenu';\nimport * as S from './MenuItem.styled';\n\nexport interface MenuItemProps {\n  value: string;\n  css?: CSSProp;\n}\n\nconst MenuItem = (props: PropsWithChildren<MenuItemProps>) => {\n  const { children, value, css } = props;\n  const { selectedValue } = useMenu();\n  const isSelected = selectedValue === value;\n\n  return (\n    <>\n      <S.Wrapper\n        role=\"menuitem\"\n        css={css}\n        className={isSelected ? 'selected' : ''}\n      >\n        {isSelected && (\n          <Text as=\"span\" css={S.checkMark}>\n            ✓\n          </Text>\n        )}\n        {children}\n      </S.Wrapper>\n    </>\n  );\n};\n\nexport default MenuItem;\n","import type { PropsWithChildren } from 'react';\nimport { MenuProvider } from '~/components/common/Menu/MenuContext';\nimport MenuButton from '~/components/common/Menu/MenuButton/MenuButton';\nimport MenuList from '~/components/common/Menu/MenuList/MenuList';\nimport MenuItem from '~/components/common/Menu/MenuItem/MenuItem';\nimport * as S from './Menu.styled';\n\nconst Menu = (props: PropsWithChildren) => {\n  const { children } = props;\n\n  return (\n    <MenuProvider>\n      <S.Wrapper>{children}</S.Wrapper>\n    </MenuProvider>\n  );\n};\n\nMenu.Button = MenuButton;\nMenu.List = MenuList;\nMenu.Item = MenuItem;\n\nexport default Menu;\n","import { styled, css } from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const BubbleContainer = styled.div`\n  position: fixed;\n  z-index: ${({ theme }) => theme.zIndex.MODAL};\n\n  width: 200px;\n  padding: 18px 22px 12px;\n\n  background-color: ${({ theme }) => theme.color.WHITE};\n  border-radius: 10px;\n\n  transform: translate(36px, 64px);\n\n  box-shadow:\n    0 0 1px #1b1d1f33,\n    0 15px 25px #1b1d1f33,\n    0 5px 10px #1b1d1f1f;\n`;\n\nexport const Triangle = styled.div`\n  position: absolute;\n  z-index: ${({ theme }) => theme.zIndex.MODAL} + 1;\n  top: -12px;\n  left: 20%;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.color.WHITE};\n\n  box-shadow: -1px 1px rgb(178 178 178 / 0.6);\n\n  transform: rotate(135deg);\n`;\n\nexport const InnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  gap: 6px;\n`;\n\nexport const BadgeContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  position: relative;\n  justify-items: center;\n  row-gap: 14px;\n`;\n\nexport const BadgeWrapper = styled.div<{ isClicked: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 50%;\n  ${({ isClicked }) => {\n    if (isClicked)\n      return css`\n        border: 2px solid ${({ theme }) => theme.color.GRAY350};\n      `;\n  }}\n\n  cursor: pointer;\n`;\n\nexport const colorEditButton = css`\n  padding: 4px;\n\n  font-size: 12px;\n`;\n","import { css } from 'styled-components';\n\nexport const teamInfo = css`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const teamPlaceButton = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  width: 300px;\n  height: 40px;\n  padding: 0;\n\n  border-bottom: 1px solid ${({ theme }) => theme.color.GRAY200};\n  border-radius: 4px;\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    padding: 0;\n  }\n`;\n\nexport const teamPlaceName = css`\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  width: 260px;\n\n  font-size: 22px;\n  line-height: 22px;\n  white-space: nowrap;\n`;\n\nexport const teamName = css`\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  z-index: ${({ theme }) => theme.zIndex.MODAL};\r\n\r\n  width: 490px;\r\n  max-width: 100%;\r\n  padding: 24px;\r\n  row-gap: 24px;\r\n\r\n  border-radius: 12px;\r\n  background-color: ${({ theme }) => theme.color.WHITE};\r\n\r\n  box-shadow:\r\n    0 0 1px #1b1d1f33,\r\n    0 15px 25px #1b1d1f33,\r\n    0 5px 10px #1b1d1f1f;\r\n\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  width: 100%;\r\n  height: 38px;\r\n\r\n  border-bottom: ${({ theme }) => `1px solid ${theme.color.GRAY300}`};\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 16px;\r\n`;\r\n\r\nexport const WarningBox = styled.div`\r\n  padding: 16px;\r\n\r\n  border-radius: 4px;\r\n  background-color: ${({ theme }) => theme.color.GRAY100};\r\n\r\n  & ul > li {\r\n    margin: 0 0 6px 16px;\r\n\r\n    list-style: initial;\r\n  }\r\n\r\n  & ul > li::marker {\r\n    color: ${({ theme }) => theme.color.GRAY700};\r\n  }\r\n`;\r\n\r\nexport const Username = styled.span`\r\n  color: ${({ theme }) => theme.color.PRIMARY};\r\n`;\r\n\r\nexport const AccountDeleteForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 12px;\r\n`;\r\n\r\nexport const closeButton = css`\r\n  width: 32px;\r\n  height: 38px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const deleteConfirmInput = css`\r\n  padding: 0 10px;\r\n\r\n  font-size: 16px;\r\n\r\n  border-radius: 4px;\r\n  border: 1px solid ${({ theme }) => theme.color.GRAY400};\r\n`;\r\n\r\nexport const accountDeleteButton = css`\r\n  width: 100%;\r\n\r\n  background-color: ${({ theme }) => theme.color.RED};\r\n`;\r\n","import { styled, css } from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: ${({ theme }) => theme.zIndex.MODAL - 1};\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: ${({ theme }) => theme.zIndex.MODAL};\n\n  width: 490px;\n  max-width: 100%;\n  padding: 18px 20px 20px 20px;\n  row-gap: 10px;\n\n  border-radius: 12px;\n  background-color: ${({ theme }) => theme.color.WHITE};\n\n  box-shadow:\n    0 0 1px #1b1d1f33,\n    0 15px 25px #1b1d1f33,\n    0 5px 10px #1b1d1f1f;\n\n  transform: translate(-50%, -50%);\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n  height: 36px;\n\n  border-bottom: ${({ theme }) => `1px solid ${theme.color.GRAY300}`};\n`;\n\nexport const ModalBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 6px;\n`;\n\nexport const ExplainBox = styled.div`\n  padding: 10px;\n\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.color.GRAY100};\n`;\n\nexport const AccountBodyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  column-gap: 10px;\n`;\n\nexport const UrlWrapper = styled.a`\n  width: 100%;\n`;\n\nexport const closeButton = css`\n  width: 32px;\n  height: 38px;\n  padding: 0;\n`;\n\nexport const dangerousButton = css`\n  display: flex;\n  position: relative;\n  align-self: flex-end;\n  align-items: center;\n  padding: 0px;\n\n  cursor: pointer;\n`;\n\nexport const dangerousText = css`\n  color: ${({ theme }) => theme.color.RED};\n`;\n\nexport const explainText = css`\n  white-space: pre;\n`;\n\nexport const mailText = css`\n  text-decoration-line: underline;\n`;\n","import { css, styled } from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  overflow: hidden;\n  top: 50px;\n  right: 20px;\n  z-index: ${({ theme }) => theme.zIndex.MODAL};\n\n  width: 270px;\n  height: 420px;\n  padding: 20px 30px;\n  gap: 10px;\n\n  border-radius: 8px;\n  box-shadow:\n    0 0 1px #1b1d1f33,\n    0 15px 25px #1b1d1f33,\n    0 5px 10px #1b1d1f1f;\n  background-color: ${({ theme }) => theme.color.WHITE};\n`;\n\nexport const UserInfoForm = styled.form`\n  display: flex;\n  align-items: center;\n\n  column-gap: 6px;\n\n  &:focus {\n    outline: ${({ theme }) => theme.color.PRIMARY};\n  }\n`;\n\nexport const UserNameInputContainer = styled.div`\n  width: 200px;\n\n  border: 1px solid ${({ theme }) => theme.color.GRAY200};\n  border-radius: 4px;\n`;\n\nexport const UserNameContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 20px;\n  column-gap: 5px;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 200px;\n  height: 200px;\n  margin: 10px auto;\n\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nexport const serviceCenterButton = css`\n  display: flex;\n  position: relative;\n  align-self: flex-end;\n  align-items: center;\n  padding: 0px;\n\n  cursor: pointer;\n`;\n\nexport const hoverText = css`\n  opacity: 0;\n  color: ${({ theme }) => theme.color.RED};\n`;\n\nexport const logoutButton = css`\n  display: flex;\n  align-items: center;\n\n  margin: 0 auto;\n  padding: 8px;\n  gap: 2px;\n`;\n\nexport const userName = css`\n  overflow: hidden;\n\n  max-width: 140px;\n\n  font-weight: 500;\n  white-space: pre;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nexport const email = css`\n  margin: 0 auto;\n\n  font-size: 14px;\n  color: ${({ theme }) => theme.color.GRAY600};\n`;\n\nexport const userInfoEditButton = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 22px;\n  height: 22px;\n  padding: 2px;\n\n  border-radius: 50%;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.GRAY200};\n  }\n`;\n\nexport const userInfoSubmitButton = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 22px;\n  height: 22px;\n  padding: 2px;\n\n  border-radius: 50%;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.GRAY200};\n  }\n`;\n\nexport const userNameLength = css`\n  font-size: 12px;\n  color: ${({ theme }) => theme.color.GRAY600};\n  white-space: pre;\n`;\n\nexport const userNameInput = css`\n  border: none;\n  border-radius: 4px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n"],"names":[],"sourceRoot":""}