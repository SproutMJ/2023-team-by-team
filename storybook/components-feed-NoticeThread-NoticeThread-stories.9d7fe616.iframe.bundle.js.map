{"version":3,"file":"components-feed-NoticeThread-NoticeThread-stories.9d7fe616.iframe.bundle.js","mappings":";;;;;AASA;;;;AAIA;AACA;;;;AAIA;;AAKA;;AAIA;;AAAA;AAOA;;;;;;;;AAQA;;;;;AAKA;;AASA;;;;AAAA;AASA;;;;;;AAQA;;;;AAMA;;;;AAIA;;AAEA;AAGA;;;;;AAOA;;;;;;;;;AAWA;;;;;;;;;;AAUA;;AAIA;AAIA;;;;;;;AAOA;AAGA;;;;;AAKA;AAGA;AACA;AAGA;AAQA;;;;;AAKA;;;AAGA;;;ACrJA;AACA;AAGA;AACA;AACA;AACA;AAGA;;AAEA;AAIA;;;;;AAOA;AAEA;;;AAIA;;AAIA;;;;;;;;;;;;AAeA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;;;AAGA;;;;;;;;;;;ACvCA;;;;;;;AASA;;;;;;;;;;AAUA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;;;;;;;;;;;ACfA;;;;;AAOA;;;;;;ACbA;AACA;;AAEA;AAGA;;;;;;;AASA","sources":["webpack://frontend/./src/components/feed/NoticeThread/NoticeThread.styled.ts","webpack://frontend/./src/components/common/Button/Button.styled.ts","webpack://frontend/./src/components/common/Text/Text.styled.ts","webpack://frontend/./src/components/feed/DeletableThumbnail/DeletableThumbnail.styled.ts","webpack://frontend/./src/components/feed/ImageAddButton/ImageAddButton.styled.ts","webpack://frontend/./src/components/feed/ThumbnailList/ThumbnailList.styled.ts","webpack://frontend/./src/components/feed/ViewableThumbnail/ViewableThumbnail.styled.ts"],"sourcesContent":["import { styled, css } from 'styled-components';\nimport { noticeThreadBackground } from '~/assets/png';\nimport type { NoticeSize } from '~/types/size';\n\nexport const Container = styled.div<{ $noticeSize: NoticeSize }>`\n  position: sticky;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: ${({ theme }) => theme.zIndex.NOTICE};\n\n  padding-top: 10px;\n\n  background-color: ${({ theme }) => theme.color.GRAY100};\n  border-bottom: 2px solid ${({ theme }) => theme.color.PRIMARY200};\n\n  transition: 0.3s;\n\n  ${({ $noticeSize }) => {\n    if ($noticeSize === 'sm')\n      return css`\n        height: 80px;\n      `;\n    if ($noticeSize === 'md')\n      return css`\n        height: 140px;\n      `;\n    if ($noticeSize === 'lg')\n      return css`\n        height: 610px;\n      `;\n  }}\n`;\n\nexport const BackgroundContainer = styled.div<{ $noticeSize: NoticeSize }>`\n  display: flex;\n  justify-content: space-between;\n  overflow: hidden;\n\n  height: 100%;\n\n  border-radius: 20px 20px 0 0;\n  background-image: url(${noticeThreadBackground});\n  background-size: 100%;\n\n  transition: 0.3s;\n\n  ${({ $noticeSize }) => {\n    if ($noticeSize === 'sm')\n      return css`\n        padding: 18px 20px 18px 28px;\n      `;\n    if ($noticeSize === 'md')\n      return css`\n        padding: 18px 20px 18px 28px;\n      `;\n    if ($noticeSize === 'lg')\n      return css`\n        flex-direction: column;\n\n        padding: 18px 20px 10px 28px;\n      `;\n  }}\n`;\n\nexport const InnerContainer = styled.div<{ $noticeSize: NoticeSize }>`\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  gap: 10px;\n`;\n\nexport const ArrowContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n`;\n\nexport const ArrowIcon = styled.div<{ disabled: boolean }>`\n  width: 32px;\n  height: 32px;\n\n  opacity: ${({ disabled }) => (disabled ? 0.3 : 1)};\n\n  color: ${({ theme }) => theme.color.PRIMARY900};\n`;\n\nexport const MegaphoneWrapper = styled.div`\n  position: absolute;\n  top: 0;\n\n  width: 40px;\n`;\n\nexport const AuthorInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-shrink: 0;\n  align-items: center;\n  overflow: hidden;\n  column-gap: 8px;\n\n  height: 16px;\n`;\n\nexport const ContentContainer = styled.div<{ $noticeSize: NoticeSize }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  padding-left: 40px;\n\n  width: 100%;\n  gap: 4px;\n\n  ${({ $noticeSize }) => {\n    if ($noticeSize === 'lg')\n      return css`\n        height: 400px;\n      `;\n  }}\n`;\n\nexport const Divider = styled.span`\n  display: inline-block;\n\n  width: 1.5px;\n  height: 16px;\n  margin: 0 4px;\n\n  background-color: ${({ theme }) => theme.color.GRAY400};\n`;\n\nexport const authorInfoText = css`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  color: ${({ theme }) => theme.color.GRAY500};\n`;\n\nexport const timeInfoText = css`\n  color: ${({ theme }) => theme.color.GRAY500};\n`;\n\nexport const contentField = (noticeSize: NoticeSize) => {\n  let height = '';\n\n  if (noticeSize === 'sm') height = '24px';\n  if (noticeSize === 'md') height = '66px';\n  if (noticeSize === 'lg') height = '100%';\n\n  return css`\n    overflow: ${noticeSize === 'lg' ? ' auto' : ' hidden'};\n    text-overflow: ellipsis;\n    white-space: pre-wrap;\n\n    width: 100%;\n    height: ${height};\n\n    word-break: break-all;\n  `;\n};\n\nexport const arrowButton = css`\n  padding: 0;\n`;\n","import { styled, css } from 'styled-components';\r\nimport type { CSSProp } from 'styled-components';\r\nimport type { ButtonVariant, ButtonProps } from './Button';\r\nimport type { ButtonSize } from '~/types/size';\r\n\r\nconst paddingSize: Record<ButtonSize, string> = {\r\n  sm: '6px',\r\n  md: '12px',\r\n  lg: '18px',\r\n};\r\n\r\nconst variants: Record<ButtonVariant, CSSProp> = {\r\n  primary: css`\r\n    background-color: ${({ theme }) => theme.color.PRIMARY};\r\n    color: ${({ theme }) => theme.color.WHITE};\r\n  `,\r\n\r\n  normal: css`\r\n    background-color: ${({ theme }) => theme.color.WHITE};\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n    border: 1px solid ${({ theme }) => theme.color.GRAY300};\r\n  `,\r\n\r\n  plain: css`\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n  `,\r\n};\r\n\r\nexport const ButtonWrapper = styled.button.withConfig({\r\n  shouldForwardProp: (prop) => !['css', 'variant', 'size'].includes(prop),\r\n})<ButtonProps>`\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  text-align: center;\r\n\r\n  ${({ size = 'md' }) => {\r\n    return css`\r\n      padding: ${paddingSize[size]};\r\n    `;\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    return variants[variant];\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    if (variant !== 'plain') {\r\n      return css`\r\n        &:disabled {\r\n          opacity: 0.6;\r\n        }\r\n\r\n        &:not([disabled]):hover {\r\n          opacity: 0.8;\r\n        }\r\n\r\n        border-radius: 4px;\r\n\r\n        transition: 0.2s;\r\n      `;\r\n    }\r\n  }};\r\n\r\n  ${(props) => props.css}\r\n`;\r\n","import { styled } from 'styled-components';\nimport type { TextSize } from '~/types/size';\nimport type { TextProps, Weight } from './Text';\n\nconst fontWeight: Record<Weight, number> = {\n  light: 100,\n  normal: 400,\n  semiBold: 600,\n  bold: 800,\n};\n\nconst fontSize: Record<TextSize, string> = {\n  xxs: '10px',\n  xs: '12px',\n  sm: '14px',\n  md: '16px',\n  lg: '18px',\n  xl: '20px',\n  xxl: '22px',\n};\n\nexport const TextWrapper = styled.p.withConfig({\n  shouldForwardProp: (prop) => !['size', 'weight', 'css'].includes(prop),\n})<TextProps>`\n  h1&,\n  h2&,\n  h3&,\n  h4&,\n  h5&,\n  h6& {\n    font-weight: bold;\n  }\n  h1& {\n    font-size: 36px;\n  }\n  h2& {\n    font-size: 32px;\n  }\n  h3& {\n    font-size: 28px;\n  }\n  h4& {\n    font-size: 24px;\n  }\n  p&,\n  span&,\n  strong&,\n  small& {\n    font-size: ${({ size = 'md' }) => fontSize[size] || 'initial'};\n    font-weight: ${({ weight = 'normal' }) => fontWeight[weight] || 'initial'};\n  }\n  && {\n    ${(props) => props.css}\n  }\n`;\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.li`\r\n  display: inline-block;\r\n  flex-shrink: 0;\r\n  position: relative;\r\n\r\n  width: 96px;\r\n  height: 96px;\r\n\r\n  border-radius: 12px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  border-radius: 12px;\r\n\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const deleteButton = css`\r\n  position: absolute;\r\n  top: -4px;\r\n  right: -4px;\r\n\r\n  width: 24px;\r\n  height: 24px;\r\n  padding: 0;\r\n\r\n  border-radius: 4px;\r\n  box-shadow: 0 3px 6px ${({ theme }) => theme.color.GRAY400};\r\n  background-color: ${({ theme }) => theme.color.GRAY100};\r\n\r\n  & svg {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n","import { styled } from 'styled-components';\r\n\r\nexport const FakeButton = styled.div`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 96px;\r\n  height: 96px;\r\n\r\n  border-radius: 12px;\r\n  background-color: #dee1ff;\r\n\r\n  transition: 0.2s;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #e8eaff;\r\n  }\r\n\r\n  & svg {\r\n    color: #9792ff;\r\n  }\r\n`;\r\n\r\nexport const FileUploadInput = styled.input`\r\n  display: none;\r\n`;\r\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.ul<{ $mode: 'delete' | 'view' }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 0;\r\n  column-gap: 12px;\r\n\r\n  width: 100%;\r\n  height: 116px;\r\n\r\n  ${({ $mode }) =>\r\n    $mode === 'view'\r\n      ? css`\r\n          overflow-x: auto;\r\n          overflow-y: hidden;\r\n\r\n          padding-bottom: 20px;\r\n        `\r\n      : css`\r\n          overflow-x: visible;\r\n        `}\r\n`;\r\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.li<{ $size?: 'md' | 'sm' }>`\r\n  flex-shrink: 0;\r\n\r\n  width: ${({ $size = 'md' }) => ($size === 'md' ? '96px' : '76px')};\r\n  height: ${({ $size = 'md' }) => ($size === 'md' ? '96px' : '76px')};\r\n\r\n  border-radius: ${({ $size = 'md' }) => ($size === 'md' ? '12px' : '10px')};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  border-radius: 12px;\r\n\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const viewButton = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n\r\n  border-radius: 12px;\r\n`;\r\n"],"names":[],"sourceRoot":""}