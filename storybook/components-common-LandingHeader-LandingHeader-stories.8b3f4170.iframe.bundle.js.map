{"version":3,"file":"components-common-LandingHeader-LandingHeader-stories.8b3f4170.iframe.bundle.js","mappings":";;;AAOA;;;;;;AAQA;;;AAGA;;;ACLA;AACA;AAGA;AACA;AACA;AACA;AAGA;;AAEA;AAIA;;;;;AAKA;AAEA;;;AAIA;;AAIA;;;;;;;;;;;;AAeA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;;;AAGA","sources":["webpack://frontend/./src/components/common/LandingHeader/LandingHeader.styled.ts","webpack://frontend/./src/components/common/Button/Button.styled.ts","webpack://frontend/./src/components/common/Text/Text.styled.ts"],"sourcesContent":["import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.header`\r\n  height: 64px;\r\n  padding: 0 14px;\r\n`;\r\n\r\nexport const landingPageLinkButton = css`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding: 0;\r\n  column-gap: 20px;\r\n`;\r\n\r\nexport const headerTitle = css`\r\n  font-size: 32px;\r\n  font-weight: 800;\r\n  color: ${({ theme }) => theme.color.PRIMARY};\r\n  text-align: right;\r\n`;\r\n","import { styled, css } from 'styled-components';\r\nimport type { CSSProp } from 'styled-components';\r\nimport type { ButtonVariant, ButtonProps } from './Button';\r\nimport type { ButtonSize } from '~/types/size';\r\n\r\nconst paddingSize: Record<ButtonSize, string> = {\r\n  sm: '6px',\r\n  md: '12px',\r\n  lg: '18px',\r\n};\r\n\r\nconst variants: Record<ButtonVariant, CSSProp> = {\r\n  primary: css`\r\n    background-color: ${({ theme }) => theme.color.PRIMARY};\r\n    color: ${({ theme }) => theme.color.WHITE};\r\n  `,\r\n\r\n  normal: css`\r\n    background-color: ${({ theme }) => theme.color.WHITE};\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n    border: 1px solid ${({ theme }) => theme.color.GRAY300};\r\n  `,\r\n\r\n  plain: css`\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n  `,\r\n};\r\n\r\nexport const ButtonWrapper = styled.button<ButtonProps>`\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  text-align: center;\r\n\r\n  ${({ size = 'md' }) => {\r\n    return css`\r\n      padding: ${paddingSize[size]};\r\n    `;\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    return variants[variant];\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    if (variant !== 'plain') {\r\n      return css`\r\n        &:disabled {\r\n          opacity: 0.6;\r\n        }\r\n\r\n        &:not([disabled]):hover {\r\n          opacity: 0.8;\r\n        }\r\n\r\n        border-radius: 4px;\r\n\r\n        transition: 0.2s;\r\n      `;\r\n    }\r\n  }};\r\n\r\n  ${(props) => props.css}\r\n`;\r\n","import { styled } from 'styled-components';\nimport type { TextSize } from '~/types/size';\nimport type { TextProps, Weight } from './Text';\n\nconst fontWeight: Record<Weight, number> = {\n  light: 100,\n  normal: 400,\n  semiBold: 600,\n  bold: 800,\n};\n\nconst fontSize: Record<TextSize, string> = {\n  xxs: '10px',\n  xs: '12px',\n  sm: '14px',\n  md: '16px',\n  lg: '18px',\n  xl: '20px',\n  xxl: '22px',\n};\n\nexport const TextWrapper = styled.p<TextProps>`\n  h1&,\n  h2&,\n  h3&,\n  h4&,\n  h5&,\n  h6& {\n    font-weight: bold;\n  }\n  h1& {\n    font-size: 36px;\n  }\n  h2& {\n    font-size: 32px;\n  }\n  h3& {\n    font-size: 28px;\n  }\n  h4& {\n    font-size: 24px;\n  }\n  p&,\n  span&,\n  strong&,\n  small& {\n    font-size: ${({ size = 'md' }) => fontSize[size] || 'initial'};\n    font-weight: ${({ weight = 'normal' }) => fontWeight[weight] || 'initial'};\n  }\n  && {\n    ${(props) => props.css}\n  }\n`;\n"],"names":[],"sourceRoot":""}