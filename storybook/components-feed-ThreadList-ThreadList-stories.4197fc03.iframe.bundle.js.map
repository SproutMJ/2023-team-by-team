{"version":3,"file":"components-feed-ThreadList-ThreadList-stories.4197fc03.iframe.bundle.js","mappings":";;;;;;AAaA;AACA;AAGA;AACA;AACA;AACA;AAGA;;AAEA;AAIA;;;;;AAKA;AAEA;;;AAIA;;AAIA;;;;;;;;;;;;AAeA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;;;AAGA;;;;;;;;;;;ACrCA;;;;;;;AASA;;;;;;;;;;AAUA;AACA;;;;;;;;;;;;;ACtBA;;;;;;;AASA;;;AAKA;;AAEA;AAGA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACNA;;;;;;;;;;ACbA;;;;;;AAMA;AAGA;;;;;AAKA;;AAEA;AAGA;;AAIA;AACA;;;;;AAQA;;;;;AAOA;;;;;;AAQA;;;;AAMA;;;;;;;AASA;;;;;AAQA;;AAEA;;;;AAOA;;;;AAIA;AAGA;;;;AAIA;AACA;;;;;;;;;;;AC5FA;;AAEA;;;;AAIA;;AAGA;;;AAIA;;AAGA;;;AAGA;;;;;;;;;;;ACpBA;;;;;AAOA;;;;;;ACbA;AACA;;AAEA;AAGA;;;;;;;AASA","sources":["webpack://frontend/./src/components/common/Button/Button.styled.ts","webpack://frontend/./src/components/common/Text/Text.styled.ts","webpack://frontend/./src/components/feed/DeletableThumbnail/DeletableThumbnail.styled.ts","webpack://frontend/./src/components/feed/EmptyFeedPlaceholder/EmptyFeedPlaceholder.styled.ts","webpack://frontend/./src/components/feed/ImageAddButton/ImageAddButton.styled.ts","webpack://frontend/./src/components/feed/Thread/Thread.styled.ts","webpack://frontend/./src/components/feed/ThreadExpandButton/ThreadExpandButton.styled.ts","webpack://frontend/./src/components/feed/ThumbnailList/ThumbnailList.styled.ts","webpack://frontend/./src/components/feed/ViewableThumbnail/ViewableThumbnail.styled.ts"],"sourcesContent":["import { styled, css } from 'styled-components';\r\nimport type { CSSProp } from 'styled-components';\r\nimport type { ButtonVariant, ButtonProps } from './Button';\r\nimport type { ButtonSize } from '~/types/size';\r\n\r\nconst paddingSize: Record<ButtonSize, string> = {\r\n  sm: '6px',\r\n  md: '12px',\r\n  lg: '18px',\r\n};\r\n\r\nconst variants: Record<ButtonVariant, CSSProp> = {\r\n  primary: css`\r\n    background-color: ${({ theme }) => theme.color.PRIMARY};\r\n    color: ${({ theme }) => theme.color.WHITE};\r\n  `,\r\n\r\n  normal: css`\r\n    background-color: ${({ theme }) => theme.color.WHITE};\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n    border: 1px solid ${({ theme }) => theme.color.GRAY300};\r\n  `,\r\n\r\n  plain: css`\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n  `,\r\n};\r\n\r\nexport const ButtonWrapper = styled.button<ButtonProps>`\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  text-align: center;\r\n\r\n  ${({ size = 'md' }) => {\r\n    return css`\r\n      padding: ${paddingSize[size]};\r\n    `;\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    return variants[variant];\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    if (variant !== 'plain') {\r\n      return css`\r\n        &:disabled {\r\n          opacity: 0.6;\r\n        }\r\n\r\n        &:not([disabled]):hover {\r\n          opacity: 0.8;\r\n        }\r\n\r\n        border-radius: 4px;\r\n\r\n        transition: 0.2s;\r\n      `;\r\n    }\r\n  }};\r\n\r\n  ${(props) => props.css}\r\n`;\r\n","import { styled } from 'styled-components';\nimport type { TextSize } from '~/types/size';\nimport type { TextProps, Weight } from './Text';\n\nconst fontWeight: Record<Weight, number> = {\n  light: 100,\n  normal: 400,\n  semiBold: 600,\n  bold: 800,\n};\n\nconst fontSize: Record<TextSize, string> = {\n  xxs: '10px',\n  xs: '12px',\n  sm: '14px',\n  md: '16px',\n  lg: '18px',\n  xl: '20px',\n  xxl: '22px',\n};\n\nexport const TextWrapper = styled.p<TextProps>`\n  h1&,\n  h2&,\n  h3&,\n  h4&,\n  h5&,\n  h6& {\n    font-weight: bold;\n  }\n  h1& {\n    font-size: 36px;\n  }\n  h2& {\n    font-size: 32px;\n  }\n  h3& {\n    font-size: 28px;\n  }\n  h4& {\n    font-size: 24px;\n  }\n  p&,\n  span&,\n  strong&,\n  small& {\n    font-size: ${({ size = 'md' }) => fontSize[size] || 'initial'};\n    font-weight: ${({ weight = 'normal' }) => fontWeight[weight] || 'initial'};\n  }\n  && {\n    ${(props) => props.css}\n  }\n`;\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.li`\r\n  display: inline-block;\r\n  flex-shrink: 0;\r\n  position: relative;\r\n\r\n  width: 96px;\r\n  height: 96px;\r\n\r\n  border-radius: 12px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  border-radius: 12px;\r\n\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const deleteButton = css`\r\n  position: absolute;\r\n  top: -4px;\r\n  right: -4px;\r\n\r\n  width: 24px;\r\n  height: 24px;\r\n  padding: 0;\r\n\r\n  border-radius: 4px;\r\n  box-shadow: 0 3px 6px ${({ theme }) => theme.color.GRAY400};\r\n  background-color: ${({ theme }) => theme.color.GRAY100};\r\n\r\n  & svg {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PlaceholderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  row-gap: 18px;\r\n\r\n  width: 380px;\r\n`;\r\n\r\nexport const FeedEmptyImage = styled.img`\r\n  width: 18%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const titleText = css`\r\n  font-size: 28px;\r\n  color: ${({ theme }) => theme.color.GRAY400};\r\n`;\r\n\r\nexport const clickToAddText = css`\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.color.GRAY500};\r\n`;\r\n","import { styled } from 'styled-components';\r\n\r\nexport const FakeButton = styled.div`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 96px;\r\n  height: 96px;\r\n\r\n  border-radius: 12px;\r\n  background-color: #dee1ff;\r\n\r\n  transition: 0.2s;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #e8eaff;\r\n  }\r\n\r\n  & svg {\r\n    color: #9792ff;\r\n  }\r\n`;\r\n\r\nexport const FileUploadInput = styled.input`\r\n  display: none;\r\n`;\r\n","import { css, styled } from 'styled-components';\nimport type { ThreadSize } from '~/types/size';\n\nexport const Container = styled.div<{ isMe: boolean }>`\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  gap: 10px;\n\n  z-index: 0;\n`;\n\nexport const BodyContainer = styled.div<{ isMe: boolean }>`\n  display: flex;\n  align-items: flex-end;\n\n  gap: 10px;\n\n  ${({ isMe }) => isMe && 'flex-direction: row-reverse'};\n`;\n\nexport const ContentContainer = styled.div<{ isMe: boolean; height: number }>`\n  display: flex;\n  flex-direction: column;\n\n  max-width: 80%;\n  max-height: ${({ height }) => height}px;\n\n  ${({ isMe, theme }) => {\n    if (isMe)\n      return css`\n        background-color: ${theme.color.PRIMARY900};\n        border-radius: 12px 12px 0 12px;\n      `;\n\n    return css`\n      background-color: ${theme.color.GRAY150};\n      border-radius: 0 12px 12px 12px;\n    `;\n  }}\n\n  transition: 0.3s;\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  padding: 16px 28px;\n`;\n\nexport const ThreadHeader = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 8px;\n\n  height: 36px;\n`;\n\nexport const Author = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 30px;\n  height: 30px;\n\n  border-radius: 50%;\n\n  object-fit: cover;\n`;\n\nexport const ThumbnailListWrapper = styled.div<{\n  isMe: boolean;\n  marginBottom: boolean;\n}>`\n  width: 100%;\n  height: 136px;\n  padding: 40px 20px 0 20px;\n  margin-top: -20px;\n  margin-bottom: ${({ marginBottom }) => (marginBottom ? '40px' : '20px')};\n\n  background: ${({ theme, isMe }) =>\n    isMe ? theme.gradient.BLURPLE('116px') : theme.gradient.WHITE('116px')};\n\n  z-index: 1;\n  box-sizing: border-box;\n`;\n\nexport const threadInfoText = css`\n  white-space: pre-wrap;\n\n  font-size: 14px;\n  color: ${({ theme }) => theme.color.BLACK};\n`;\n\nexport const contentField = (threadSize: ThreadSize, isMe: boolean) => css`\n  width: 100%;\n  white-space: pre-wrap;\n\n  font-size: ${threadSize === 'md' ? 18 : 16}px;\n  color: ${({ theme }) => (isMe ? theme.color.WHITE : theme.color.BLACK)};\n\n  word-break: break-all;\n`;\n","import { styled, css } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const expandButton = (isMe: boolean, size: 'md' | 'sm') => css`\n  width: 100%;\n  height: ${size === 'md' ? '80px' : '70px'};\n  padding: 30px 10px 10px 10px;\n  margin-top: -30px;\n\n  ${isMe\n    ? css`\n        border-bottom-left-radius: 12px;\n      `\n    : css`\n        border-radius: 0 0 12px 12px;\n      `}\n  background: ${({ theme }) =>\n    isMe ? theme.gradient.BLURPLE('50px') : theme.gradient.WHITE('50px')};\n\n  color: ${({ theme }) => (isMe ? theme.color.WHITE : theme.color.BLACK)};\n\n  & svg {\n    width: ${size === 'md' ? '32px' : '26px'};\n  }\n`;\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.ul<{ mode: 'delete' | 'view' }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 0;\r\n  column-gap: 12px;\r\n\r\n  width: 100%;\r\n  height: 116px;\r\n\r\n  ${({ mode }) =>\r\n    mode === 'view'\r\n      ? css`\r\n          overflow-x: auto;\r\n          overflow-y: hidden;\r\n\r\n          padding-bottom: 20px;\r\n        `\r\n      : css`\r\n          overflow-x: visible;\r\n        `}\r\n`;\r\n","import { styled, css } from 'styled-components';\r\n\r\nexport const Container = styled.li<{ size?: 'md' | 'sm' }>`\r\n  flex-shrink: 0;\r\n\r\n  width: ${({ size = 'md' }) => (size === 'md' ? '96px' : '76px')};\r\n  height: ${({ size = 'md' }) => (size === 'md' ? '96px' : '76px')};\r\n\r\n  border-radius: ${({ size = 'md' }) => (size === 'md' ? '12px' : '10px')};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  border-radius: 12px;\r\n\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const viewButton = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n\r\n  border-radius: 12px;\r\n`;\r\n"],"names":[],"sourceRoot":""}